/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.awt.EventQueue;
import java.io.FileInputStream;
import java.util.Properties;
import javax.swing.JFrame;
import org.jvnet.substance.SubstanceLookAndFeel;
import org.jvnet.substance.watermark.*;

/**
 *
 * @author Frigo Mayor
 */
public final class SplashScreen extends javax.swing.JFrame implements Runnable {

    public SplashScreen() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 0, 36)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/inicio.jpg"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        try {
            this.setLocationRelativeTo(null);
            this.setVisible(true);
            Thread.sleep(3000);
            EventQueue.invokeLater(new Runnable() {

                @Override
                public void run() {
                    try {
                        Properties propiedad = new Properties();
                        propiedad.load(new FileInputStream(VeterinariaSJ.propiedades));

                        if (!propiedad.getProperty("skin").equals("null")) {

                            JFrame.setDefaultLookAndFeelDecorated(true);
                            SubstanceLookAndFeel.setSkin("org.jvnet.substance.skin." + propiedad.getProperty("skin"));
                            SubstanceLookAndFeel.setCurrentWatermark(new SubstancePlanktonWatermark());
                        } else {

                            try {
                                for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                                    if ("Nimbus".equals(info.getName())) {
                                        javax.swing.UIManager.setLookAndFeel(info.getClassName());
                                        break;
                                    }
                                }
                            } catch (ClassNotFoundException ex) {
                                java.util.logging.Logger.getLogger(AcercaDe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                            } catch (InstantiationException ex) {
                                java.util.logging.Logger.getLogger(AcercaDe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                            } catch (IllegalAccessException ex) {
                                java.util.logging.Logger.getLogger(AcercaDe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                            } catch (javax.swing.UnsupportedLookAndFeelException ex) {
                                java.util.logging.Logger.getLogger(AcercaDe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                            }
                        }
//                        SubstanceLookAndFeel.setImageWatermarkOpacity(new Float(0.3));
                        if (!propiedad.getProperty("tema").equalsIgnoreCase("null")) {
                            SubstanceLookAndFeel.setCurrentTheme("org.jvnet.substance.theme." + propiedad.getProperty("tema"));
                        }


                    } catch (Exception e) {
                    }
                    new Interfaz().setVisible(true);
                }
            });

            this.hide();
        } catch (InterruptedException ex) {
        }
    }
}
